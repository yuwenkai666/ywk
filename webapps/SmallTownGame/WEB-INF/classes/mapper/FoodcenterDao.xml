<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.muzhi.dao.FoodcenterDao">
  <resultMap id="BaseResultMap" type="com.muzhi.model.Foodcenter">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="buildId" jdbcType="INTEGER" property="buildId" />
    <result column="lefttime" jdbcType="INTEGER" property="lefttime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, level, buildId, lefttime,power
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from foodcenter
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from foodcenter
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.muzhi.model.Foodcenter">
    insert into foodcenter (id, level, buildId, 
      lefttime,power)
    values (#{id,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, #{buildId,jdbcType=INTEGER}, 
      #{lefttime,jdbcType=INTEGER}, #{power,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.muzhi.model.Foodcenter">
    insert into foodcenter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="buildId != null">
        buildId,
      </if>
      <if test="lefttime != null">
        lefttime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="buildId != null">
        #{buildId,jdbcType=INTEGER},
      </if>
      <if test="lefttime != null">
        #{lefttime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.muzhi.model.Foodcenter">
    update foodcenter
    <set>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="buildId != null">
        buildId = #{buildId,jdbcType=INTEGER},
      </if>
      <if test="lefttime != null">
        lefttime = #{lefttime,jdbcType=INTEGER},
      </if>
      <if test="power != null">
        power = #{power,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.muzhi.model.Foodcenter">
    update foodcenter
    set level = #{level,jdbcType=INTEGER},
      buildId = #{buildId,jdbcType=INTEGER},
      lefttime = #{lefttime,jdbcType=INTEGER},
      power =#{power,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 
  <resultMap id="BaseResultMap" type="com.muzhi.model.Foodcenter">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="buildId" jdbcType="INTEGER" property="buildid" />
  </resultMap>
  <sql id="Base_Column_List">
    id, level, buildId
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from foodcenter
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from foodcenter
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.muzhi.model.Foodcenter">
    insert into foodcenter (id, level, buildId
      )
    values (#{id,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, #{buildid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.muzhi.model.Foodcenter">
    insert into foodcenter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="buildid != null">
        buildId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="buildid != null">
        #{buildid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.muzhi.model.Foodcenter">
    update foodcenter
    <set>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="buildid != null">
        buildId = #{buildid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.muzhi.model.Foodcenter">
    update foodcenter
    set level = #{level,jdbcType=INTEGER},
      buildId = #{buildid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.muzhi.model.Foodcenter">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="buildId" jdbcType="INTEGER" property="buildid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, level, buildId
  </sql>
  <select id="selectByExample" parameterType="com.muzhi.model.FoodcenterExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from foodcenter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from foodcenter
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from foodcenter
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.muzhi.model.FoodcenterExample">
    delete from foodcenter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.muzhi.model.Foodcenter">
    insert into foodcenter (id, level, buildId
      )
    values (#{id,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, #{buildid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.muzhi.model.Foodcenter">
    insert into foodcenter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="buildid != null">
        buildId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="buildid != null">
        #{buildid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.muzhi.model.FoodcenterExample" resultType="java.lang.Long">
    select count(*) from foodcenter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update foodcenter
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.buildid != null">
        buildId = #{record.buildid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update foodcenter
    set id = #{record.id,jdbcType=INTEGER},
      level = #{record.level,jdbcType=INTEGER},
      buildId = #{record.buildid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.muzhi.model.Foodcenter">
    update foodcenter
    <set>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="buildid != null">
        buildId = #{buildid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.muzhi.model.Foodcenter">
    update foodcenter
    set level = #{level,jdbcType=INTEGER},
      buildId = #{buildid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.muzhi.model.Foodcenter">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="level" jdbcType="INTEGER" property="level" />
  </resultMap>
  <sql id="Base_Column_List">
    id, level
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from foodcenter
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from foodcenter
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.muzhi.model.Foodcenter">
    insert into foodcenter (id, level)
    values (#{id,jdbcType=INTEGER}, #{level,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.muzhi.model.Foodcenter">
    insert into foodcenter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="level != null">
        level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.muzhi.model.Foodcenter">
    update foodcenter
    <set>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.muzhi.model.Foodcenter">
    update foodcenter
    set level = #{level,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
   -->
</mapper>