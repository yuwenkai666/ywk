<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.muzhi.dao.ChefDao">
  <resultMap id="BaseResultMap" type="com.muzhi.model.Chef">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="employId" jdbcType="INTEGER" property="employid" />
    <result column="source" jdbcType="INTEGER" property="source" />
    <result column="addition" jdbcType="VARCHAR" property="addition" />
    <result column="isKeep" jdbcType="INTEGER" property="iskeep" />
    <result column="isTempKeep" jdbcType="INTEGER" property="istempkeep" />
    <result column="leftTime" jdbcType="INTEGER" property="lefttime" />
    <result column="isNew" jdbcType="INTEGER" property="isnew" />
    <result column="index" jdbcType="INTEGER" property="index" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime"/>
  </resultMap>
  
  <insert id="insertList" parameterType="java.util.List">
		replace INTO `chef` (
		<include refid="colunm_param"></include>
		)
		VALUES
		<foreach collection="recordList" item="item" index="index"
			separator=",">
			(#{item.id,jdbcType=INTEGER},
			#{item.employid,jdbcType=INTEGER}, #{item.source,jdbcType=INTEGER},
			#{item.addition,jdbcType=VARCHAR}, #{item.iskeep,jdbcType=INTEGER},
			#{item.istempkeep,jdbcType=INTEGER}, #{item.lefttime,jdbcType=INTEGER},
			#{item.isnew,jdbcType=INTEGER}, #{item.index,jdbcType=INTEGER},
			#{item.createTime,jdbcType=TIMESTAMP})
		</foreach>
		<!-- ON DUPLICATE KEY UPDATE -->
	</insert>

	<select id="selectList" parameterType="com.muzhi.model.Chef"
		resultType="com.muzhi.model.Chef">
		select
		<include refid="colunm_param"/>
		from chef
		<include refid="Where_Clause"/>
	</select>
	
	<select id="selectByIndex" resultMap="BaseResultMap">
		select
		<include refid="colunm_param"></include>
		from chef
		where id = #{userId}
		and `index` = #{index}
	</select>
	
	<!-- 查询用户某一个厨师 -->
	<select id="selectOneChef" resultMap="BaseResultMap">
		select
		<include refid="colunm_param"></include>
		from chef
		where 1=1
		<if test="userId!=null and userId!=''">
		and id = #{userId}
		</if>
		<if test="chefId!=null and chefId!=''">
		and employId = #{chefId}
		</if>
	</select>
	<!-- 解雇用户厨师 -->
	<delete id="deleteOneChef">
		delete from chef
		where id = #{userId,jdbcType=INTEGER}
		and employId=#{chefId,jdbcType=INTEGER}
	</delete>
	
	 <update id="updateByPrimaryKey" parameterType="com.muzhi.model.Chef">
	    update chef
	    set source = #{source,jdbcType=INTEGER},
	      addition = #{addition,jdbcType=VARCHAR},
	      isKeep = #{iskeep,jdbcType=INTEGER},
	      isTempKeep = #{istempkeep,jdbcType=INTEGER},
	      leftTime = #{lefttime,jdbcType=INTEGER},
	      isNew = #{isnew,jdbcType=INTEGER},
	      `index` = #{index,jdbcType=INTEGER},
	      createTime = #{createTime,jdbcType=TIMESTAMP}
   	    where id = #{id,jdbcType=INTEGER}
	      and employId = #{employid,jdbcType=INTEGER}
	  </update>
	
	<!-- <update id="updateByExampleSelective" parameterType="map"> update town..asher 
		<set> <if test="record.id != null"> id = #{record.id,jdbcType=INTEGER}, </if> 
		<if test="record.employid != null"> employId = #{record.employid,jdbcType=INTEGER}, 
		</if> <if test="record.source != null"> source = #{record.source,jdbcType=INTEGER}, 
		</if> <if test="record.addition != null"> addition = #{record.addition,jdbcType=VARCHAR}, 
		</if> <if test="record.iskeep != null"> isKeep = #{record.iskeep,jdbcType=INTEGER}, 
		</if> <if test="record.lefttime != null"> leftTime = #{record.lefttime,jdbcType=INTEGER}, 
		</if> <if test="record.isnew != null"> isNew = #{record.isnew,jdbcType=INTEGER}, 
		</if> </set> <if test="_parameter != null"> <include refid="Update_By_Example_Where_Clause" 
		/> </if> </update> -->

	<sql id="colunm_param">
		id, employId, source,
		addition, isKeep, isTempKeep, leftTime,
		isNew, `index`,createTime
	</sql>

	<sql id="Where_Clause">
		<where>
			<choose>
				<when test="id != null">
					and id=#{id}
				</when>
				<when test="employId != null">
					and employId=#{employId}
				</when>
				<when test="source != null">
					and source=#{source}
				</when>
				<when test="addition != null">
					and addition=#{addition}
				</when>
				<when test="isKeep != null">
					and isKeep=#{isKeep}
				</when>
				<when test="isTempKeep != null">
					and isTempKeep=#{isTempKeep}
				</when>
				<when test="leftTime != null">
					and leftTime=#{leftTime}
				</when>
				<when test="isNew != null">
					and isNew=#{isNew}
				</when>
				<when test="index != null">
					and index=#{index}
				</when>
			</choose>
		</where>
	</sql>
</mapper>