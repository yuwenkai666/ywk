<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.muzhi.dao.InventoryDao">
	<resultMap id="inventory" type="com.muzhi.model.Inventory">
		<id column="id" jdbcType="INTEGER" property="id"/>
		<result column="indexNum" jdbcType="INTEGER" property="indexNum" />
		<result column="level" jdbcType="INTEGER" property="level" />
		<collection property="foodList" column="foodID" javaType="ArrayList" 
			ofType="com.muzhi.model.Food">
			<result column="foodID" jdbcType="INTEGER" property="foodID" />
			<result column="foodQualify" jdbcType="INTEGER" property="foodQualify" />
			<result column="num" jdbcType="INTEGER" property="num" />
		</collection>
	</resultMap>
		
	<!-- 根据uid，获取一条用户记录 -->
	<select id="getInventoryWithFood" parameterType="java.lang.Integer"
		resultMap="inventory">
		select *
		from inventory i inner join food f
		on i.id = f.id and i.id = #{id,jdbcType=INTEGER}
	</select> 
	<select id="getInventoryWithOutFood" parameterType="java.lang.Integer"
		resultMap="inventory">
		select *
		from inventory where id = #{id}
	</select>
	
	<insert id="insert">
		insert into inventory (
			id, indexNum, level
		) values (
			#{id}, #{indexNum}, #{level}		
		)
	</insert>
	
	<!-- 更新一条用户记录 -->
	<update id="updateInventory" parameterType="com.muzhi.model.Inventory">
		update inventory set
			<include refid="userValue"></include>
		where id = #{id,jdbcType=INTEGER}
	</update>
	
   <sql id="userValue">
		level = #{level},
		indexNum = #{indexNum}
	</sql>

</mapper>